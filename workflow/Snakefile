from snakemake.utils import validate
import yaml
import os

def all_input(wildcards):
    """
    Generate all inputs for the rule all
    """
    wanted_input = []
    base_dir = config["workdir"]
    if config["method"] == "sample_ncbi":
        with open(config["sample_ncbi"]["sampling_scheme"], "r") as stream:
            sampling_scheme = yaml.safe_load(stream)
        for taxa in sampling_scheme.keys():
            wanted_input.append(os.path.join("ncbi_data", taxa.replace(" ", "_") + ".tsv"))
        wanted_input.append(os.path.join("ncbi_data", "datasets.tsv"))

    if config["method"] == "sample_gtdb":
        wanted_input.append("sample_gtdb.annotation_data.tsv")
    if config["method"] == "prune_gtdb":
        wanted_input.append(os.path.join("prune_gtdb.bac120.nwk"))
        wanted_input.append(os.path.join("prune_gtdb.bac120.metadata.tsv"))
        wanted_input.append(os.path.join("prune_gtdb.ar53.nwk"))
        wanted_input.append(os.path.join("prune_gtdb.ar53.metadata.tsv"))

    # Handle download options
    if config["downloads"]["genomes"]:
        wanted_input.append("genomes")
    if config["downloads"]["cds"]:
        wanted_input.append("cds")
    if config["downloads"]["proteomes"]:
        wanted_input.append("proteomes")

    # Handle blast databases options
    if config["databases"]["diamond_protein"] and config["downloads"]["proteomes"]:
        if config["downloads"]["proteomes"]:
            wanted_input.append(os.path.join('diamond_db', "sdbw.dmnd"))
        else:
            print("Building Diamond-database require turning the download proteome option to True")
    if config["databases"]["blast_protein"]:
        if config["downloads"]["proteomes"]:
            wanted_input.append(os.path.join('ncbi_blastp_db', "sdbw.pdb"))
        else:
            print("Building Blast protein-database require turning the download proteome option to True")
    return wanted_input

# Validate config-file
validate(config, schema="validation_schemes/config.schema.yaml")

workdir: config['workdir']
include: "rules/download_gtdb_data.smk"
include: "rules/download_ncbi_data.smk"
include: "rules/gtdb_taxonomy_phylogeny.smk"
include: "rules/ncbi_taxonomy.smk"
include: "rules/download_sampled_data.smk"

rule all:
    input: all_input
